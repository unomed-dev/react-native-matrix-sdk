// Generated by uniffi-bindgen-react-native
import installer from './NativeReactNativeMatrixSdk';

// Register the rust crate with Hermes
// - the boolean flag ensures this loads exactly once, even if the JS
//   code is reloaded (e.g. during development with metro).
let rustInstalled = false;
if (!rustInstalled) {
  installer.installRustCrate();
  rustInstalled = true;
}

// Export the generated bindings to the app.
export * from './generated/matrix_sdk';
export * from './generated/matrix_sdk_base';
export * from './generated/matrix_sdk_common';
export * from './generated/matrix_sdk_crypto';
export * from './generated/matrix_sdk_ffi';
export * from './generated/matrix_sdk_ui';

// Now import the bindings so we can:
// - intialize them
// - export them as namespaced objects as the default export.
import * as matrix_sdk from './generated/matrix_sdk';
import * as matrix_sdk_base from './generated/matrix_sdk_base';
import * as matrix_sdk_common from './generated/matrix_sdk_common';
import * as matrix_sdk_crypto from './generated/matrix_sdk_crypto';
import * as matrix_sdk_ffi from './generated/matrix_sdk_ffi';
import * as matrix_sdk_ui from './generated/matrix_sdk_ui';

// Initialize the generated bindings: mostly checksums, but also callbacks.
// - the boolean flag ensures this loads exactly once, even if the JS code
//   is reloaded (e.g. during development with metro).
let initialized = false;
if (!initialized) {
  matrix_sdk.default.initialize();
  matrix_sdk_base.default.initialize();
  matrix_sdk_common.default.initialize();
  matrix_sdk_crypto.default.initialize();
  matrix_sdk_ffi.default.initialize();
  matrix_sdk_ui.default.initialize();
  initialized = true;
}

// This provides parity with the index.web.ts version of this file.
// The web version relies on an asynchronous fetch, which this doesn't
// need, so we just no-op.
export async function uniffiInitAsync() {
  // NOOP.
}

// Export the crates as individually namespaced objects.
export default {
  matrix_sdk,
  matrix_sdk_base,
  matrix_sdk_common,
  matrix_sdk_crypto,
  matrix_sdk_ffi,
  matrix_sdk_ui,
};

